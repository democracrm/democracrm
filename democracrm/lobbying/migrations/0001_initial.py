# Generated by Django 4.1.2 on 2022-12-02 11:52

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('places', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoverningBody',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('level', models.CharField(choices=[('federal', 'Federal'), ('state', 'State'), ('county', 'County'), ('municipal', 'Municipal')], max_length=255)),
                ('boundary', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='places.boundary')),
            ],
            options={
                'verbose_name_plural': 'Governing Bodies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Legislation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('number', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('url', models.URLField(blank=True)),
                ('status', models.CharField(blank=True, choices=[('proposed', 'Proposed'), ('in-committee', 'In Committee'), ('in-debate', 'In Debate'), ('voting-on', 'Voting On'), ('adopted', 'Adopted'), ('rejected', 'Rejected')], max_length=255)),
                ('body', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='lobbying.governingbody')),
                ('committee', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='lobbying.committee')),
            ],
            options={
                'verbose_name_plural': 'Legislation',
            },
        ),
        migrations.CreateModel(
            name='PoliticalParty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Political Parties',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PoliticalSubdivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('district', models.IntegerField(blank=True)),
                ('seats', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name_plural': 'Political Subdivisions',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PublicOffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('legislative', 'Legislative'), ('executive', 'Executive'), ('judicial', 'Judicial'), ('other', 'Other')], default='legislative', max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('seats', models.IntegerField(default=1)),
                ('governing_body', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lobbying.governingbody')),
            ],
            options={
                'verbose_name_plural': 'Public Offices',
            },
        ),
        migrations.CreateModel(
            name='PublicOfficial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_elected', models.BooleanField(default=True)),
                ('title', models.CharField(default='Legislator', max_length=255)),
                ('is_leadership', models.BooleanField(default=False)),
                ('leadership_title', models.CharField(blank=True, max_length=255)),
                ('prefix_name', models.CharField(blank=True, max_length=50)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('suffix_name', models.CharField(blank=True, max_length=50)),
                ('service_start', models.DateField(blank=True)),
                ('service_end', models.DateField(blank=True)),
                ('role', models.CharField(choices=[('legislative', 'Legislative'), ('executive', 'Executive'), ('judicial', 'Judicial'), ('administrative', 'Administrative'), ('clerical', 'Clerical')], default='Legislator', max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('office', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='lobbying.publicoffice')),
                ('party', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='lobbying.politicalparty')),
                ('subdivision', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='lobbying.politicalsubdivision')),
            ],
            options={
                'verbose_name_plural': 'Public Officials',
            },
        ),
        migrations.CreateModel(
            name='Voter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(blank=True, max_length=255, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=255, verbose_name='Middle Name')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='Last Name')),
                ('sex', models.CharField(blank=True, max_length=10, verbose_name='Sex')),
                ('birth_date', models.DateField(blank=True, verbose_name='Birth Date')),
                ('initial_registration', models.DateField(blank=True, verbose_name='Initial Registration')),
                ('current_registration', models.DateField(blank=True, verbose_name='Current Registration')),
                ('address_number', models.CharField(blank=True, max_length=100, verbose_name='Address Number')),
                ('address_street_direction', models.CharField(blank=True, max_length=100, verbose_name='Address Street Direction')),
                ('address_street_name', models.CharField(blank=True, max_length=100, verbose_name='Address Street Name')),
                ('address_street_type', models.CharField(blank=True, max_length=100, verbose_name='Address Street Type')),
                ('address_unit', models.CharField(blank=True, max_length=100, verbose_name='Address Unit')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='State')),
                ('zip_code', models.CharField(blank=True, max_length=100, verbose_name='ZIP Code')),
                ('phone_number', models.CharField(blank=True, max_length=11, verbose_name='Phone Number')),
                ('email_address', models.CharField(blank=True, max_length=254, verbose_name='Email')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='lobbying.politicalparty')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SupportLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('campaign_support', models.CharField(choices=[('Strongly Supports', 'Strongly Supports'), ('Supports', 'Supports'), ('Undecided On', 'Undecided On'), ('Opposes', 'Opposes'), ('Strongly Opposes', 'Strongly Opposes')], max_length=255)),
                ('legislation_support', models.CharField(choices=[('Strongly Supports', 'Strongly Supports'), ('Supports', 'Supports'), ('Undecided On', 'Undecided On'), ('Opposes', 'Opposes'), ('Strongly Opposes', 'Strongly Opposes')], max_length=255)),
                ('legislation', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='lobbying.legislation')),
                ('official', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lobbying.publicofficial')),
            ],
            options={
                'verbose_name_plural': 'Support Levels',
            },
        ),
        migrations.AddField(
            model_name='politicalsubdivision',
            name='office',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lobbying.publicoffice'),
        ),
        migrations.CreateModel(
            name='LegislativeSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('start_date', models.DateField(blank=True)),
                ('end_date', models.DateField(blank=True)),
                ('body', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='lobbying.governingbody')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='legislation',
            name='session',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='lobbying.legislativesession'),
        ),
        migrations.CreateModel(
            name='InterpersonalTie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('tie_strength', models.CharField(choices=[('strong', 'Strong'), ('weak', 'Weak'), ('invisible', 'Invisible'), ('unknown', 'Unknown')], default='unknown', max_length=10)),
                ('tie_affinity', models.CharField(choices=[('positive', 'Positive'), ('neutral', 'Neutral'), ('negative', 'Negative')], default='neutral', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('official1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ties_from', to='lobbying.publicofficial')),
                ('official2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ties_to', to='lobbying.publicofficial')),
            ],
            options={
                'verbose_name_plural': 'Interpersonal Ties',
            },
        ),
        migrations.AddField(
            model_name='committee',
            name='body',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='lobbying.governingbody'),
        ),
        migrations.AddField(
            model_name='committee',
            name='office',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='lobbying.publicoffice'),
        ),
    ]
